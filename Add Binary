#Given two binary strings, return their sum (also a binary string).
#For example,
#  a = "11"
#  b = "1"
#Return "100".

# Solution one.
# Add the overlap part and then the left part.
def addBinary(self, a, b):
        alen = len(a)
        blen = len(b)
        c = 0
        res = []
        for i in range(-1, -min(alen,blen)-1,-1):
            sum = int(a[i]) + int(b[i]) + c
            c = sum / 2
            res.insert(0,sum % 2)
        for i in range(-min(alen,blen)-1,-alen-1,-1):
            sum = int(a[i]) + c
            c = sum / 2
            res.insert(0, sum % 2)
        for i in range(-min(alen,blen)-1,-blen-1,-1):
            sum = int(b[i]) + c
            c = sum / 2
            res.insert(0, sum % 2)
        if c > 0:
            res.insert(0,c)
        return ''.join(str(e) for e in res)
        
        
# Solution 2
# Flatten the short string to the same length and then add
def addBinary(self, a, b):
        res = []
        c = 0
        if len(a) < len(b):
            a = '0' * (len(b) - len(a)) + a
        if len(b) < len(a):
            b = '0' * (len(a) - len(b)) + b
        for i in range(-1, -len(a) - 1, -1):
            sum = int(a[i]) + int(b[i]) + c
            c = sum / 2
            res.insert(0,sum % 2)
        if c > 0:
            res.insert(0,c)
        return ''.join(str(e) for e in res)
        
